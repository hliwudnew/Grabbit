{"ast":null,"code":"var _jsxFileName = \"/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/MyListingsPage.js\",\n  _s = $RefreshSig$();\n// src/Pages/MyListingsPage.js\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../Styles/ListingsPage.css\";\nimport ListingTile from \"../Components/ListingTile\";\nimport SortingSelect from \"../Components/SortingSelect.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyListingsPage() {\n  _s();\n  const [items, setItems] = useState([]);\n  const location = useLocation();\n\n  // Retrieve user info from localStorage\n  const storedUser = localStorage.getItem(\"user\");\n  const user = storedUser ? JSON.parse(storedUser) : null;\n\n  // Extract query parameters for filtering (if needed)\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get(\"q\") || \"\";\n  const categoryQuery = queryParams.get(\"category\") || \"\";\n  useEffect(() => {\n    if (!user) return; // Optionally redirect if user is not logged in\n\n    // Base URL for seller's items (active items only)\n    let baseUrl = \"http://localhost:5003/api/items/seller/myitems\";\n    let url = baseUrl;\n    if (searchQuery || categoryQuery) {\n      let queryString = \"\";\n      if (categoryQuery) {\n        queryString += `category=${encodeURIComponent(categoryQuery)}`;\n      }\n      if (searchQuery) {\n        queryString += (queryString ? \"&\" : \"\") + `q=${encodeURIComponent(searchQuery)}`;\n      }\n      url = `${baseUrl}?${queryString}`;\n    }\n    const headers = {\n      Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\")\n    };\n    fetch(url, {\n      headers\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch items\");\n      }\n      return response.json();\n    }).then(data => {\n      // Since the server now returns only active items, just set them\n      setItems(data);\n    }).catch(error => {\n      console.error(\"Error fetching items:\", error);\n    });\n  }, [searchQuery, categoryQuery, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ListingsPage-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ListingsPage-header\",\n      children: /*#__PURE__*/_jsxDEV(SortingSelect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ListingsPage-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListingsPage-filters\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListingsPage-tiles\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(ListingTile, {\n          data: item\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(MyListingsPage, \"QYcC4kzSuKNXB+WRcy2S6En0UHg=\", false, function () {\n  return [useLocation];\n});\n_c = MyListingsPage;\nexport default MyListingsPage;\nvar _c;\n$RefreshReg$(_c, \"MyListingsPage\");","map":{"version":3,"names":["useState","useEffect","useLocation","ListingTile","SortingSelect","jsxDEV","_jsxDEV","MyListingsPage","_s","items","setItems","location","storedUser","localStorage","getItem","user","JSON","parse","queryParams","URLSearchParams","search","searchQuery","get","categoryQuery","baseUrl","url","queryString","encodeURIComponent","headers","Authorization","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_id","_c","$RefreshReg$"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/MyListingsPage.js"],"sourcesContent":["// src/Pages/MyListingsPage.js\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../Styles/ListingsPage.css\";\nimport ListingTile from \"../Components/ListingTile\";\nimport SortingSelect from \"../Components/SortingSelect.js\";\n\nfunction MyListingsPage() {\n  const [items, setItems] = useState([]);\n  const location = useLocation();\n\n  // Retrieve user info from localStorage\n  const storedUser = localStorage.getItem(\"user\");\n  const user = storedUser ? JSON.parse(storedUser) : null;\n\n  // Extract query parameters for filtering (if needed)\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get(\"q\") || \"\";\n  const categoryQuery = queryParams.get(\"category\") || \"\";\n\n  useEffect(() => {\n    if (!user) return; // Optionally redirect if user is not logged in\n\n    // Base URL for seller's items (active items only)\n    let baseUrl = \"http://localhost:5003/api/items/seller/myitems\";\n    let url = baseUrl;\n    if (searchQuery || categoryQuery) {\n      let queryString = \"\";\n      if (categoryQuery) {\n        queryString += `category=${encodeURIComponent(categoryQuery)}`;\n      }\n      if (searchQuery) {\n        queryString += (queryString ? \"&\" : \"\") + `q=${encodeURIComponent(searchQuery)}`;\n      }\n      url = `${baseUrl}?${queryString}`;\n    }\n\n    const headers = {\n      Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\n    };\n\n    fetch(url, { headers })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch items\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Since the server now returns only active items, just set them\n        setItems(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching items:\", error);\n      });\n  }, [searchQuery, categoryQuery, user]);\n\n  return (\n    <div className=\"ListingsPage-content\">\n      <div className=\"ListingsPage-header\">\n        <SortingSelect />\n      </div>\n      <div className=\"ListingsPage-bottom\">\n        <div className=\"ListingsPage-filters\">\n          <h2>Filters</h2>\n          {/* Additional filter UI elements if needed */}\n        </div>\n        <div className=\"ListingsPage-tiles\">\n          {items.map((item) => (\n            <ListingTile key={item._id} data={item} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyListingsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}