{"ast":null,"code":"var _jsxFileName = \"/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Components/TaskBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/TaskBar.css\";\nimport IconButton from \"@mui/material/IconButton\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport Badge, { badgeClasses } from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nimport TurnedInIcon from \"@mui/icons-material/TurnedIn\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskBar({\n  cartIcon,\n  user\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [badge, setBadge] = useState(0);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    setBadge(cartIcon);\n  }, [cartIcon]);\n\n  // Styles for badge using MUI's styled API\n  const CartBadge = styled(Badge)`\n    & .${badgeClasses.badge} {\n      top: -12px;\n      right: -6px;\n      background-color: #685be0;\n    }\n  `;\n  function stringToHslColor(str, saturation, lightness) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = hash % 360;\n    return `hsl(${hash}, ${saturation}%, ${lightness}%)`;\n  }\n\n  // When the search button is clicked, navigate to /listings with a query parameter\n  const handleSearch = () => {\n    navigate(`/listings?q=${encodeURIComponent(searchQuery)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskBar-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskBar-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"3.5rem\",\n            height: \"3.5rem\",\n            cursor: \"pointer\"\n          },\n          onClick: () => navigate(\"/\"),\n          src: \"./grabbit-cut.png\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Grabbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskBar-pages\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"DropDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          size: \"small\",\n          style: {\n            width: \"100%\",\n            borderRadius: \"100%\"\n          },\n          variant: \"outlined\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"black\",\n            borderColor: \"black\"\n          },\n          variant: \"outlined\",\n          onClick: handleSearch,\n          className: \"page\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskBar-profile\",\n        children: !user ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate(\"/login\"),\n          children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate(\"/create\"),\n            children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate(\"/messages\"),\n            children: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate(\"/cart\"),\n            children: [/*#__PURE__*/_jsxDEV(TurnedInIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CartBadge, {\n              badgeContent: badge,\n              color: \"primary\",\n              overlap: \"circular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            onClick: () => navigate(\"/account\"),\n            style: {\n              marginLeft: \"1%\",\n              cursor: \"pointer\",\n              backgroundColor: stringToHslColor(user.username ? user.username : \"Adam Sandler\", 40, 60)\n            },\n            children: user.username ? user.username.substring(0, 1) : \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskBar, \"7+D0UAV9PgFXky6DqVJgtokjWm8=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskBar;\nexport default TaskBar;\nvar _c;\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"names":["React","useState","useEffect","IconButton","PersonIcon","SearchIcon","TextField","Button","useNavigate","MessageIcon","AddCircleOutlineIcon","Badge","badgeClasses","styled","TurnedInIcon","Avatar","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskBar","cartIcon","user","_s","navigate","badge","setBadge","searchQuery","setSearchQuery","CartBadge","stringToHslColor","str","saturation","lightness","hash","i","length","charCodeAt","handleSearch","encodeURIComponent","className","children","style","width","height","cursor","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","size","borderRadius","variant","value","onChange","e","target","color","borderColor","badgeContent","overlap","marginLeft","backgroundColor","username","substring","_c","$RefreshReg$"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Components/TaskBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Styles/TaskBar.css\";\nimport IconButton from \"@mui/material/IconButton\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport Badge, { badgeClasses } from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nimport TurnedInIcon from \"@mui/icons-material/TurnedIn\";\nimport Avatar from \"@mui/material/Avatar\";\n\nfunction TaskBar({ cartIcon, user }) {\n  const navigate = useNavigate();\n  const [badge, setBadge] = useState(0);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    setBadge(cartIcon);\n  }, [cartIcon]);\n\n  // Styles for badge using MUI's styled API\n  const CartBadge = styled(Badge)`\n    & .${badgeClasses.badge} {\n      top: -12px;\n      right: -6px;\n      background-color: #685be0;\n    }\n  `;\n\n  function stringToHslColor(str, saturation, lightness) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = hash % 360;\n    return `hsl(${hash}, ${saturation}%, ${lightness}%)`;\n  }\n\n  // When the search button is clicked, navigate to /listings with a query parameter\n  const handleSearch = () => {\n    navigate(`/listings?q=${encodeURIComponent(searchQuery)}`);\n  };\n\n  return (\n    <div className=\"TaskBar\">\n      <div className=\"TaskBar-content\">\n        <div className=\"TaskBar-logo\">\n          <img\n            style={{ width: \"3.5rem\", height: \"3.5rem\", cursor: \"pointer\" }}\n            onClick={() => navigate(\"/\")}\n            src=\"./grabbit-cut.png\"\n            alt=\"logo\"\n          />\n          <h1>Grabbit</h1>\n        </div>\n        <div className=\"TaskBar-pages\">\n          <button>DropDown</button>\n          <TextField\n            size=\"small\"\n            style={{ width: \"100%\", borderRadius: \"100%\" }}\n            variant=\"outlined\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <Button\n            style={{ color: \"black\", borderColor: \"black\" }}\n            variant=\"outlined\"\n            onClick={handleSearch}\n            className=\"page\"\n          >\n            <SearchIcon />\n          </Button>\n        </div>\n        <div className=\"TaskBar-profile\">\n          {!user ? (\n            <IconButton onClick={() => navigate(\"/login\")}>\n              <PersonIcon />\n            </IconButton>\n          ) : (\n            <>\n              <IconButton onClick={() => navigate(\"/create\")}>\n                <AddCircleOutlineIcon />\n              </IconButton>\n              <IconButton onClick={() => navigate(\"/messages\")}>\n                <MessageIcon />\n              </IconButton>\n              <IconButton onClick={() => navigate(\"/cart\")}>\n                <TurnedInIcon />\n                <CartBadge badgeContent={badge} color=\"primary\" overlap=\"circular\" />\n              </IconButton>\n              <Avatar\n                onClick={() => navigate(\"/account\")}\n                style={{\n                  marginLeft: \"1%\",\n                  cursor: \"pointer\",\n                  backgroundColor: stringToHslColor(user.username ? user.username : \"Adam Sandler\", 40, 60),\n                }}\n              >\n                {user.username ? user.username.substring(0, 1) : \"A\"}\n              </Avatar>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}