{"ast":null,"code":"var _jsxFileName = \"/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/CreateAccountPage.js\",\n  _s = $RefreshSig$();\nimport \"../Styles/CreateAccountPage.css\";\nimport { Button, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateAccountPage() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const requestCreate = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5002/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // Optionally include Accept header if needed:\n          // \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user,\n          email: email,\n          password: password\n        })\n      });\n      const json = await response.json();\n      console.log(\"Response:\", json);\n      if (response.ok) {\n        // Registration was successful\n        // Optionally store the token from json.token, e.g.:\n        // localStorage.setItem(\"jwtToken\", json.token);\n        navigate(\"/account\");\n      } else {\n        // Handle errors from the server (e.g., validation errors)\n        console.error(\"Error creating account:\", json);\n        // You could set an error message state here to display on the UI\n      }\n    } catch (error) {\n      console.error(\"Request failed:\", error);\n      // Optionally display an error message on the UI\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateAccountPage-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateAccountPage-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateAccountPage-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          variant: \"outlined\",\n          sx: {\n            input: {\n              color: \"#685BE0\"\n            }\n          },\n          className: \"account-input\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          variant: \"outlined\",\n          sx: {\n            input: {\n              color: \"#685BE0\"\n            }\n          },\n          className: \"account-input\",\n          value: user,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          sx: {\n            input: {\n              color: \"#685BE0\"\n            }\n          },\n          className: \"account-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: requestCreate,\n          style: {\n            backgroundColor: \"#685BE0\",\n            width: \"50%\"\n          },\n          variant: \"contained\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateAccountPage, \"rvesTKg2zLCG1OjYQfWQTV/b90A=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccountPage;\nexport default CreateAccountPage;\nvar _c;\n$RefreshReg$(_c, \"CreateAccountPage\");","map":{"version":3,"names":["Button","TextField","useNavigate","useState","jsxDEV","_jsxDEV","CreateAccountPage","_s","navigate","email","setEmail","password","setPassword","user","setUser","requestCreate","response","fetch","method","headers","body","JSON","stringify","username","json","console","log","ok","error","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","sx","input","color","value","onChange","e","target","type","onClick","backgroundColor","width","_c","$RefreshReg$"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/CreateAccountPage.js"],"sourcesContent":["import \"../Styles/CreateAccountPage.css\";\nimport { Button, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction CreateAccountPage() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n\n  const requestCreate = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5002/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // Optionally include Accept header if needed:\n          // \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user,\n          email: email,\n          password: password,\n        }),\n      });\n\n      const json = await response.json();\n      console.log(\"Response:\", json);\n\n      if (response.ok) {\n        // Registration was successful\n        // Optionally store the token from json.token, e.g.:\n        // localStorage.setItem(\"jwtToken\", json.token);\n        navigate(\"/account\");\n      } else {\n        // Handle errors from the server (e.g., validation errors)\n        console.error(\"Error creating account:\", json);\n        // You could set an error message state here to display on the UI\n      }\n    } catch (error) {\n      console.error(\"Request failed:\", error);\n      // Optionally display an error message on the UI\n    }\n  };\n\n  return (\n    <div className=\"CreateAccountPage-content\">\n      <div className=\"CreateAccountPage-holder\">\n        <div style={{ textAlign: \"left\" }}>\n          <h1>Create Account</h1>\n        </div>\n        <div className=\"CreateAccountPage-inputs\">\n          <TextField\n            label=\"Email\"\n            variant=\"outlined\"\n            sx={{ input: { color: \"#685BE0\" } }}\n            className=\"account-input\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            sx={{ input: { color: \"#685BE0\" } }}\n            className=\"account-input\"\n            value={user}\n            onChange={(e) => setUser(e.target.value)}\n          />\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            sx={{ input: { color: \"#685BE0\" } }}\n            className=\"account-input\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Button\n            onClick={requestCreate}\n            style={{ backgroundColor: \"#685BE0\", width: \"50%\" }}\n            variant=\"contained\"\n          >\n            Create Account\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateAccountPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}