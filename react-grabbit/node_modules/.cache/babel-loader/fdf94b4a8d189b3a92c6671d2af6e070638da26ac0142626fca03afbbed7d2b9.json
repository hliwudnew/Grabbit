{"ast":null,"code":"var _jsxFileName = \"/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/MessagesPage.js\",\n  _s = $RefreshSig$();\nimport { TextField, Button } from \"@mui/material\";\nimport \"../Styles/MessagesPage.css\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ContactTile from \"../Components/ContactTile\";\nimport Avatar from '@mui/material/Avatar';\nimport SendIcon from '@mui/icons-material/Send';\nimport IconButton from '@mui/material/IconButton';\nimport { useState, useEffect, useRef } from \"react\";\nimport MessageTile from \"../Components/MessageTile\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessagesPage({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState();\n  const [receiver, setReceiver] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n  const [displayName, setDisplayName] = useState(\"\");\n  const token = localStorage.getItem(\"jwtToken\");\n  const isMounted = useRef(false);\n\n  /*\n  Note conversation UI probably wont update when a new message is sent by the other end, if page refreshes it will garanteed\n  */\n\n  useEffect(() => {\n    requestContacts();\n  }, []);\n\n  //Runs on reciver change\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n      return;\n    }\n    //console.log(\"Rec\",receiver)\n    requestConversation();\n    for (let i = 0; i < contacts.length; i++) {\n      if (contacts[i].sender == receiver) {\n        setDisplayName(contacts[i].senderName);\n      }\n    }\n  }, [receiver]);\n  async function requestConversation() {\n    try {\n      const response = await fetch(\"http://localhost:5002/api/messages/\" + receiver, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Conversation Fetch failed:\", errorData.message);\n        return;\n      }\n      const json = await response.json();\n      //console.log(\"Response:\", json);\n\n      createConversation(json);\n    } catch (error) {\n      console.error(\"Request failed:\", error);\n    }\n  }\n  function createConversation(convo) {\n    const conversation = [];\n    for (let i = 0; i < convo.length; i++) {\n      //Our Messages should be dark purple\n      if (convo[i].sender === user._id) {\n        const newMessage = {\n          txt: convo[i].content,\n          colour: \"#685be0\"\n        };\n        conversation.push(newMessage);\n      }\n      //Others messages are light purple\n      else {\n        const newMessage = {\n          txt: convo[i].content,\n          colour: \"#8a7ff0\"\n        };\n        conversation.push(newMessage);\n      }\n    }\n    setMessages(conversation);\n  }\n  async function sendMessage() {\n    try {\n      var receiverName = \"\";\n      //Looks through the contacts and grabs associated id\n      for (let i = 0; i < contacts.length; i++) {\n        if (contacts[i].sender == receiver) {\n          receiverName = contacts[i].senderName;\n        }\n      }\n      const response = await fetch(\"http://localhost:5002/api/messages/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          receiver: receiver,\n          content: text,\n          senderName: user.username,\n          receiverName: receiverName\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Send Message Fetch failed:\", errorData.message);\n        return;\n      }\n      const json = await response.json();\n      //console.log(\"Response:\", json);\n      setText(\"\");\n      //Might want to update the conversation here too when the user sends a new message, hgence updating it for themselves on the UI\n      requestConversation(); // Bad solution for now, since it re pulls the entire convo\n    } catch (error) {\n      console.error(\"Request failed:\", error);\n    }\n  }\n  async function requestContacts() {\n    try {\n      const response = await fetch(\"http://localhost:5002/api/messages\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Conversation Fetch failed:\", errorData.message);\n        return;\n      }\n      const json = await response.json();\n      //console.log(\"Contacts:\", json);\n      setContacts(json);\n    } catch (error) {\n      console.error(\"Request failed:\", error);\n    }\n  }\n  function stringToHslColor(string, saturation, boldness) {\n    var hash = 0;\n    for (var i = 0; i < string.length; i++) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    hash = hash % 360;\n    return 'hsl(' + hash + ', ' + saturation + '%, ' + boldness + '%)';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MessagesPage-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MessagesPage-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessagesPage-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessagesPage-search\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 43\n            }, this),\n            sx: {\n              input: {\n                color: 'black'\n              },\n              bgcolor: \"white\"\n            },\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessagesPage-contacts\",\n          children: contacts ? contacts.map(person => {\n            return /*#__PURE__*/_jsxDEV(ContactTile, {\n              setReceiver: setReceiver,\n              person: person\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessagesPage-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessagesPage-header\",\n          children: messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              style: {\n                backgroundColor: stringToHslColor(displayName ? displayName : \"Adam Sandler\", 40, 60)\n              },\n              children: displayName ? displayName.substring(0, 1) : \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: displayName ? displayName : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Your Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            display: \"block\",\n            margin: \"0%\",\n            borderTop: \"1px solid black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessagesPage-Messages\",\n          children: messages ? messages.map(text => {\n            return /*#__PURE__*/_jsxDEV(MessageTile, {\n              data: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessagesPage-Texting\",\n          children: messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => sendMessage(),\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: text,\n              onChange: event => {\n                setText(event.target.value);\n              },\n              style: {\n                width: \"80%\"\n              },\n              size: \"small\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(MessagesPage, \"uCs8vljM88kcyEkXAeQlDJMC23E=\");\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["TextField","Button","SearchIcon","ContactTile","Avatar","SendIcon","IconButton","useState","useEffect","useRef","MessageTile","jsxDEV","_jsxDEV","Fragment","_Fragment","MessagesPage","user","_s","messages","setMessages","text","setText","receiver","setReceiver","contacts","setContacts","displayName","setDisplayName","token","localStorage","getItem","isMounted","requestContacts","current","requestConversation","i","length","sender","senderName","response","fetch","method","headers","ok","errorData","json","console","error","message","createConversation","convo","conversation","_id","newMessage","txt","content","colour","push","sendMessage","receiverName","body","JSON","stringify","username","stringToHslColor","string","saturation","boldness","hash","charCodeAt","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","sx","input","color","bgcolor","size","map","person","style","backgroundColor","substring","display","margin","borderTop","data","onClick","value","onChange","event","target","width","variant","_c","$RefreshReg$"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/MessagesPage.js"],"sourcesContent":["import { TextField, Button} from \"@mui/material\";\nimport \"../Styles/MessagesPage.css\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ContactTile from \"../Components/ContactTile\";\nimport Avatar from '@mui/material/Avatar';\nimport SendIcon from '@mui/icons-material/Send';\nimport IconButton from '@mui/material/IconButton';\nimport { useState, useEffect, useRef } from \"react\";\nimport MessageTile from \"../Components/MessageTile\";\n\nfunction MessagesPage({user}){\n\n    const [messages,setMessages] = useState([]);\n    const [text,setText] = useState();\n    const [receiver,setReceiver] = useState(\"\");\n    const [contacts,setContacts] = useState([]);\n    const [displayName,setDisplayName] = useState(\"\");\n    const token = localStorage.getItem(\"jwtToken\");\n    const isMounted = useRef(false);\n\n    /*\n    Note conversation UI probably wont update when a new message is sent by the other end, if page refreshes it will garanteed\n    */\n\n    useEffect(() => {\n        requestContacts();\n    },[])\n\n    //Runs on reciver change\n    useEffect(() =>{\n        if(!isMounted.current){\n            isMounted.current = true;\n            return;\n        }\n        //console.log(\"Rec\",receiver)\n        requestConversation();\n        for(let i = 0; i < contacts.length; i++){\n            if(contacts[i].sender == receiver){\n                setDisplayName(contacts[i].senderName);\n            }\n        }\n    },[receiver])\n\n    async function requestConversation() {\n        try {\n            const response = await fetch(\"http://localhost:5002/api/messages/\"+receiver, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${token}`\n              },\n            });\n      \n            if (!response.ok) {\n              const errorData = await response.json();\n              console.error(\"Conversation Fetch failed:\", errorData.message);\n              return;\n            }\n      \n            const json = await response.json();\n            //console.log(\"Response:\", json);\n\n            createConversation(json);\n          } catch (error) {\n            console.error(\"Request failed:\", error);\n        }\n    }\n\n    function createConversation(convo){\n        const conversation =[];\n        for(let i = 0; i < convo.length; i++){\n            //Our Messages should be dark purple\n            if(convo[i].sender === user._id){\n                const newMessage = {\n                    txt:convo[i].content,\n                    colour:\"#685be0\",\n                }\n                conversation.push(newMessage)\n            }\n            //Others messages are light purple\n            else{\n                const newMessage = {\n                    txt:convo[i].content,\n                    colour:\"#8a7ff0\",\n                }\n                conversation.push(newMessage)\n            }\n        }\n        setMessages(conversation);\n    }\n\n\n    async function sendMessage(){\n        try {\n            var receiverName = \"\";\n            //Looks through the contacts and grabs associated id\n            for(let i = 0; i < contacts.length; i++){\n                if(contacts[i].sender == receiver){\n                    receiverName= contacts[i].senderName;\n                }\n            }\n            const response = await fetch(\"http://localhost:5002/api/messages/\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${token}`\n              },\n              body: JSON.stringify({\n                receiver: receiver,\n                content: text,\n                senderName:user.username,\n                receiverName:receiverName\n              }),\n            });\n      \n            if (!response.ok) {\n              const errorData = await response.json();\n              console.error(\"Send Message Fetch failed:\", errorData.message);\n              return;\n            }\n      \n            const json = await response.json();\n            //console.log(\"Response:\", json);\n            setText(\"\")\n            //Might want to update the conversation here too when the user sends a new message, hgence updating it for themselves on the UI\n            requestConversation()// Bad solution for now, since it re pulls the entire convo\n        } \n        catch (error) {\n            console.error(\"Request failed:\", error);\n        }\n    }\n\n    async function requestContacts() {\n        try {\n            const response = await fetch(\"http://localhost:5002/api/messages\", {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${token}`\n              },\n            });\n      \n            if (!response.ok) {\n              const errorData = await response.json();\n              console.error(\"Conversation Fetch failed:\", errorData.message);\n              return;\n            }\n      \n            const json = await response.json();\n            //console.log(\"Contacts:\", json);\n            setContacts(json)\n          } catch (error) {\n            console.error(\"Request failed:\", error);\n        }\n    }\n    \n    function stringToHslColor(string, saturation, boldness) {\n        var hash = 0;\n        for (var i = 0; i < string.length; i++) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        hash = hash % 360;\n        return 'hsl('+hash+', '+saturation+'%, '+boldness+'%)';\n    }\n\n\n    return(\n        <div className=\"MessagesPage-container\">\n            <div className=\"MessagesPage-holder\">\n                <div className=\"MessagesPage-left\">\n                    <div className=\"MessagesPage-search\">\n                        <TextField label={<SearchIcon/>} sx={{ input: { color: 'black' }, bgcolor:\"white\"}} size=\"small\"></TextField>\n                    </div>\n                    <div className=\"MessagesPage-contacts\">\n                        {\n                            contacts ?\n                            contacts.map((person) => {\n                                return(\n                                    <ContactTile setReceiver={setReceiver} person={person}/>\n                                )\n                            })\n                            :\n                            <></>\n                        }\n                    </div>\n                </div>\n                <div className=\"MessagesPage-right\">\n                    <div className=\"MessagesPage-header\">\n                        {\n                            messages.length > 0?\n                            <>\n                            <Avatar style={{\n                                backgroundColor: stringToHslColor(displayName ? displayName : \"Adam Sandler\", 40, 60)\n                            }}>\n                                {displayName ? displayName.substring(0, 1) : \"A\"}\n                            </Avatar>\n                            <p>{displayName ? displayName: \"\"}</p>\n                            </>\n                            :\n                            <h2>Welcome to Your Messages</h2>\n                        }\n                    </div>\n                    <hr style={{display:\"block\",margin:\"0%\",borderTop:\"1px solid black\"}}/>\n                    <div className=\"MessagesPage-Messages\">\n                    {\n                        messages ?\n                        messages.map((text) => {\n                            return(\n                                <MessageTile data={text}/>\n                            )\n                        })\n                        :\n                        <></>\n                    }\n                    </div>\n                    <div className=\"MessagesPage-Texting\">\n                        {\n                            messages.length > 0?\n                            <>\n                                <hr/>\n                                <IconButton onClick={() => sendMessage()}>\n                                    <SendIcon/>\n                                </IconButton>\n                                <TextField value={text} onChange={(event) => {setText(event.target.value)}} style={{width:\"80%\"}} size=\"small\" variant=\"outlined\"></TextField>\n                            </>\n                            :\n                            <></>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MessagesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}