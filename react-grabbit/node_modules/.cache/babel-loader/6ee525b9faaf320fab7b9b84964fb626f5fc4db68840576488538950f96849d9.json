{"ast":null,"code":"var _jsxFileName = \"/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Components/StripeOnboarding.js\",\n  _s = $RefreshSig$();\n// src/Components/StripeOnboarding.js\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StripeOnboarding({\n  stripeAccountId\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const handleOnboard = async () => {\n    try {\n      const response = await fetch('http://localhost:5004/api/account-link', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          account: stripeAccountId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create account link');\n      }\n      // Redirect to Stripe-hosted onboarding page\n      window.location.href = data.url;\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (stripeAccountId) {\n      handleOnboard();\n    } else {\n      setError('No Stripe account ID provided.');\n      setLoading(false);\n    }\n  }, [stripeAccountId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Redirecting to Stripe onboarding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleOnboard,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(StripeOnboarding, \"3A7irQsmTFprN2fIMiSbnYXp4lk=\");\n_c = StripeOnboarding;\nexport default StripeOnboarding;\nvar _c;\n$RefreshReg$(_c, \"StripeOnboarding\");","map":{"version":3,"names":["React","useEffect","useState","Alert","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","StripeOnboarding","stripeAccountId","_s","loading","setLoading","error","setError","handleOnboard","response","fetch","method","headers","body","JSON","stringify","account","data","json","ok","Error","window","location","href","url","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Components/StripeOnboarding.js"],"sourcesContent":["// src/Components/StripeOnboarding.js\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button } from '@mui/material';\n\nfunction StripeOnboarding({ stripeAccountId }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const handleOnboard = async () => {\n    try {\n      const response = await fetch('http://localhost:5004/api/account-link', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ account: stripeAccountId }),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create account link');\n      }\n      // Redirect to Stripe-hosted onboarding page\n      window.location.href = data.url;\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (stripeAccountId) {\n      handleOnboard();\n    } else {\n      setError('No Stripe account ID provided.');\n      setLoading(false);\n    }\n  }, [stripeAccountId]);\n\n  return (\n    <div>\n      {loading && <p>Redirecting to Stripe onboarding...</p>}\n      {error && (\n        <>\n          <Alert severity=\"error\">{error}</Alert>\n          <Button variant=\"contained\" onClick={handleOnboard}>\n            Try Again\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default StripeOnboarding;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,gBAAgBA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEd;QAAgB,CAAC;MACnD,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACX,KAAK,IAAI,+BAA+B,CAAC;MAChE;MACA;MACAe,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,IAAI,CAACO,GAAG;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;MACrBrB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIS,eAAe,EAAE;MACnBM,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLD,QAAQ,CAAC,gCAAgC,CAAC;MAC1CF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,oBACEJ,OAAA;IAAA6B,QAAA,GACGvB,OAAO,iBAAIN,OAAA;MAAA6B,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACrDzB,KAAK,iBACJR,OAAA,CAAAE,SAAA;MAAA2B,QAAA,gBACE7B,OAAA,CAACH,KAAK;QAACqC,QAAQ,EAAC,OAAO;QAAAL,QAAA,EAAErB;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvCjC,OAAA,CAACF,MAAM;QAACqC,OAAO,EAAC,WAAW;QAACC,OAAO,EAAE1B,aAAc;QAAAmB,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CA7CQF,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AA+CzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}