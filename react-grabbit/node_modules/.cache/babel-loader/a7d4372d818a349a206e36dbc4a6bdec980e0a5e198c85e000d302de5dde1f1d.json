{"ast":null,"code":"// In controllers/itemController.js\nexports.searchOtherItems = async (req, res) => {\n  try {\n    // Get query parameters\n    const {\n      q,\n      minPrice,\n      maxPrice,\n      category\n    } = req.query;\n    // Build filter: available items not sold by current user\n    let filter = {\n      purchased: false,\n      \"seller._id\": {\n        $ne: req.user._id\n      }\n    };\n    if (q) {\n      filter.$or = [{\n        title: {\n          $regex: q,\n          $options: \"i\"\n        }\n      }, {\n        description: {\n          $regex: q,\n          $options: \"i\"\n        }\n      }];\n    }\n    if (minPrice || maxPrice) {\n      filter.price = {};\n      if (minPrice) filter.price.$gte = Number(minPrice);\n      if (maxPrice) filter.price.$lte = Number(maxPrice);\n    }\n    if (category) {\n      filter.category = category;\n    }\n    const items = await Item.find(filter);\n    res.json(items);\n  } catch (error) {\n    res.status(500).json({\n      message: \"Server error\",\n      error: error.message\n    });\n  }\n};","map":{"version":3,"names":["exports","searchOtherItems","req","res","q","minPrice","maxPrice","category","query","filter","purchased","$ne","user","_id","$or","title","$regex","$options","description","price","$gte","Number","$lte","items","Item","find","json","error","status","message"],"sources":["/Users/uthithmenonravitharan/Documents/GitHub/Grabbit/react-grabbit/src/Pages/ListingsPage.js"],"sourcesContent":["// In controllers/itemController.js\nexports.searchOtherItems = async (req, res) => {\n  try {\n    // Get query parameters\n    const { q, minPrice, maxPrice, category } = req.query;\n    // Build filter: available items not sold by current user\n    let filter = { purchased: false, \"seller._id\": { $ne: req.user._id } };\n\n    if (q) {\n      filter.$or = [\n        { title: { $regex: q, $options: \"i\" } },\n        { description: { $regex: q, $options: \"i\" } }\n      ];\n    }\n    if (minPrice || maxPrice) {\n      filter.price = {};\n      if (minPrice) filter.price.$gte = Number(minPrice);\n      if (maxPrice) filter.price.$lte = Number(maxPrice);\n    }\n    if (category) {\n      filter.category = category;\n    }\n\n    const items = await Item.find(filter);\n    res.json(items);\n  } catch (error) {\n    res.status(500).json({ message: \"Server error\", error: error.message });\n  }\n};"],"mappings":"AAAA;AACAA,OAAO,CAACC,gBAAgB,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF;IACA,MAAM;MAAEC,CAAC;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGL,GAAG,CAACM,KAAK;IACrD;IACA,IAAIC,MAAM,GAAG;MAAEC,SAAS,EAAE,KAAK;MAAE,YAAY,EAAE;QAAEC,GAAG,EAAET,GAAG,CAACU,IAAI,CAACC;MAAI;IAAE,CAAC;IAEtE,IAAIT,CAAC,EAAE;MACLK,MAAM,CAACK,GAAG,GAAG,CACX;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAEZ,CAAC;UAAEa,QAAQ,EAAE;QAAI;MAAE,CAAC,EACvC;QAAEC,WAAW,EAAE;UAAEF,MAAM,EAAEZ,CAAC;UAAEa,QAAQ,EAAE;QAAI;MAAE,CAAC,CAC9C;IACH;IACA,IAAIZ,QAAQ,IAAIC,QAAQ,EAAE;MACxBG,MAAM,CAACU,KAAK,GAAG,CAAC,CAAC;MACjB,IAAId,QAAQ,EAAEI,MAAM,CAACU,KAAK,CAACC,IAAI,GAAGC,MAAM,CAAChB,QAAQ,CAAC;MAClD,IAAIC,QAAQ,EAAEG,MAAM,CAACU,KAAK,CAACG,IAAI,GAAGD,MAAM,CAACf,QAAQ,CAAC;IACpD;IACA,IAAIC,QAAQ,EAAE;MACZE,MAAM,CAACF,QAAQ,GAAGA,QAAQ;IAC5B;IAEA,MAAMgB,KAAK,GAAG,MAAMC,IAAI,CAACC,IAAI,CAAChB,MAAM,CAAC;IACrCN,GAAG,CAACuB,IAAI,CAACH,KAAK,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdxB,GAAG,CAACyB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,OAAO,EAAE,cAAc;MAAEF,KAAK,EAAEA,KAAK,CAACE;IAAQ,CAAC,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}